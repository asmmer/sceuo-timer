{"version":3,"sources":["components/Icon.tsx","common/interfaces.ts","components/Button.tsx","store/app/actions.ts","utils/StorageSaver.ts","store/app/reducers.ts","components/Timer.tsx","App.tsx","store/reducers.ts","serviceWorker.ts","index.tsx"],"names":["Icons","Themes","Icon","React","memo","type","className","Start","x","y","viewBox","d","Pause","Stop","version","Sun","Moon","Button","onClick","text","disabled","children","APP_ACTIONS","StorageSaver","save","key","value","localStorage","setItem","JSON","stringify","get","loadingData","getItem","parse","clear","TimerState","timer","initialState","theme","Theme","Light","TIME_OBJECT","hours","minutes","seconds","Timer","dispatch","useDispatch","useSelector","state","app","useState","isStoped","timerState","setTimerState","parsedTime","setParsedTime","time","setTime","isThemeChanging","setIsThemeChanging","getTick","useCallback","SECONDS_LIMIT","MINUTES_LIMIT","stopTimer","runTimer","isRunning","setInterval","pauseTimer","isPaused","clearInterval","useEffect","parsedHours","parsedMinutes","parsedSeconds","getParsedTime","timerClass","timeClass","themeIcon","playStopAction","minValue","maxValue","strokeWidth","styles","buildStyles","trailColor","pathColor","textSize","textColor","TOGGLE_THEME","setTimeout","App","data-theme","combineReducers","Dark","Boolean","window","location","hostname","match","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7f106514.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Icon/Icon.css';\r\n\r\nexport enum Icons {\r\n    Start,\r\n    Pause,\r\n    Stop,\r\n    Sun,\r\n    Moon\r\n}\r\n\r\ninterface IIcon {\r\n    type: Icons\r\n}\r\n\r\nexport const Icon: React.FC<IIcon> = React.memo(({ type }: IIcon) =>\r\n    <span className=\"icon\">\r\n        {\r\n            type === Icons.Start && <>\r\n                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 494.148 494.148\">\r\n                    <g>\r\n                        <path d=\"M405.284,201.188L130.804,13.28C118.128,4.596,105.356,0,94.74,0C74.216,0,61.52,16.472,61.52,44.044v406.124\r\n                            c0,27.54,12.68,43.98,33.156,43.98c10.632,0,23.2-4.6,35.904-13.308l274.608-187.904c17.66-12.104,27.44-28.392,27.44-45.884\r\n                            C432.632,229.572,422.964,213.288,405.284,201.188z\"/>\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n        {\r\n            type === Icons.Pause && <>\r\n                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n                    <g>\r\n                        <path d=\"M181.333,0H74.667c-17.643,0-32,14.357-32,32v448c0,17.643,14.357,32,32,32h106.667c17.643,0,32-14.357,32-32V32\r\n                            C213.333,14.357,198.976,0,181.333,0z\"/>\r\n                    </g>\r\n                    <g>\r\n                        <path d=\"M437.333,0H330.667c-17.643,0-32,14.357-32,32v448c0,17.643,14.357,32,32,32h106.667c17.643,0,32-14.357,32-32V32\r\n                            C469.333,14.357,454.976,0,437.333,0z\"/>\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n        {\r\n            type === Icons.Stop && <>\r\n                <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 493.56 493.56\">\r\n                    <g>\r\n                        <path d=\"M438.254,0H58.974C27.502,0,0.006,25.992,0.006,57.472v379.256c0,31.48,27.496,56.832,58.968,56.832h379.28\r\n                            c31.468,0,55.3-25.352,55.3-56.832V57.472C493.554,25.992,469.722,0,438.254,0z\"/>\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n        {\r\n            type === Icons.Sun && <>\r\n                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 302.4 302.4\">\r\n                    <g>\r\n                        <path d=\"M204.8,97.6C191.2,84,172,75.2,151.2,75.2s-40,8.4-53.6,22.4c-13.6,13.6-22.4,32.8-22.4,53.6s8.8,40,22.4,53.6\r\n                            c13.6,13.6,32.8,22.4,53.6,22.4s40-8.4,53.6-22.4c13.6-13.6,22.4-32.8,22.4-53.6S218.8,111.2,204.8,97.6z\"/>\r\n                        <path d=\"M151.2,51.6c5.6,0,10.4-4.8,10.4-10.4V10.4c0-5.6-4.8-10.4-10.4-10.4c-5.6,0-10.4,4.8-10.4,10.4v30.8\r\n                            C140.8,46.8,145.6,51.6,151.2,51.6z\"/>\r\n                        <path d=\"M236.4,80.8l22-22c4-4,4-10.4,0-14.4s-10.4-4-14.4,0l-22,22c-4,4-4,10.4,0,14.4C225.6,84.8,232,84.8,236.4,80.8z\" />\r\n                        <path d=\"M292,140.8h-30.8c-5.6,0-10.4,4.8-10.4,10.4c0,5.6,4.8,10.4,10.4,10.4H292c5.6,0,10.4-4.8,10.4-10.4\r\n                            C302.4,145.6,297.6,140.8,292,140.8z\"/>\r\n                        <path d=\"M236,221.6c-4-4-10.4-4-14.4,0s-4,10.4,0,14.4l22,22c4,4,10.4,4,14.4,0s4-10.4,0-14.4L236,221.6z\" />\r\n                        <path d=\"M151.2,250.8c-5.6,0-10.4,4.8-10.4,10.4V292c0,5.6,4.8,10.4,10.4,10.4c5.6,0,10.4-4.8,10.4-10.4v-30.8\r\n                            C161.6,255.6,156.8,250.8,151.2,250.8z\"/>\r\n                        <path d=\"M66,221.6l-22,22c-4,4-4,10.4,0,14.4s10.4,4,14.4,0l22-22c4-4,4-10.4,0-14.4C76.8,217.6,70.4,217.6,66,221.6z\" />\r\n                        <path d=\"M51.6,151.2c0-5.6-4.8-10.4-10.4-10.4H10.4c-5.6,0-10.4,4.8-10.4,10.4s4.8,10.4,10.4,10.4h30.8\r\n                            C46.8,161.6,51.6,156.8,51.6,151.2z\"/>\r\n                        <path d=\"M66,80.8c4,4,10.4,4,14.4,0s4-10.4,0-14.4l-22-22c-4-4-10.4-4-14.4,0s-4,10.4,0,14.4L66,80.8z\" />\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n        {\r\n            type === Icons.Moon && <>\r\n                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 480 480\">\r\n                    <g>\r\n                        <path d=\"M459.782,347.328c-4.288-5.28-11.488-7.232-17.824-4.96c-17.76,6.368-37.024,9.632-57.312,9.632\r\n                            c-97.056,0-176-78.976-176-176c0-58.4,28.832-112.768,77.12-145.472c5.472-3.712,8.096-10.4,6.624-16.832\r\n                            S285.638,2.4,279.078,1.44C271.59,0.352,264.134,0,256.646,0c-132.352,0-240,107.648-240,240s107.648,240,240,240\r\n                            c84,0,160.416-42.688,204.352-114.176C464.55,360.032,464.038,352.64,459.782,347.328z\"/>\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n    </span>\r\n)","import rootReducer from 'store/reducers';\r\n\r\nexport type TRootState = ReturnType<typeof rootReducer>\r\n\r\n/**\r\n * Themes for application.\r\n */\r\n export enum Themes {\r\n    Light = 'light',\r\n    Dark = 'dark'\r\n}","import React from 'react';\r\n\r\nimport './Button/Button.css';\r\n\r\ninterface IButton {\r\n    onClick?: () => void;\r\n    text?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport const Button: React.FC<IButton> = React.memo(({ onClick, text, disabled, children }) =>\r\n    <button\r\n        className=\"base_button\"\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n    >\r\n        {children || text}\r\n    </button>\r\n)\r\n","export enum APP_ACTIONS {\r\n    TOGGLE_THEME\r\n}\r\n\r\nexport const toggleTheme = (): ToggleThemeAction => ({\r\n    type: APP_ACTIONS.TOGGLE_THEME\r\n});\r\n\r\nexport interface ToggleThemeAction {\r\n    type: typeof APP_ACTIONS.TOGGLE_THEME;\r\n}\r\n\r\nexport type AppActions = ToggleThemeAction;","export default class StorageSaver {\r\n    static save = (key: string, value: unknown): void => {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    static get = (key: string): object | null => {\r\n        const loadingData = localStorage.getItem(key);\r\n\r\n        if (loadingData) {\r\n            return JSON.parse(loadingData);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static clear = (): void => {\r\n        localStorage.clear();\r\n    }\r\n}","import { AppActions, APP_ACTIONS } from \"./actions\";\r\nimport { Themes as Theme } from \"common/interfaces\";\r\nimport StorageSaver from \"utils/StorageSaver\";\r\n\r\ntype TTheme = Theme | object;\r\n\r\ninterface IInitialState {\r\n    theme: TTheme\r\n}\r\n\r\nexport const THEME_KEY = \"theme\";\r\n\r\nconst getCurrentTheme = (): TTheme => {\r\n    return StorageSaver.get(THEME_KEY) || Theme.Light;\r\n}\r\n\r\nconst initialState: IInitialState = {\r\n    theme: getCurrentTheme()\r\n}\r\n\r\nexport const appReducer = (state = initialState, { type }: AppActions) => {\r\n    switch (type) {\r\n        case APP_ACTIONS.TOGGLE_THEME: {\r\n            return {\r\n                theme: (state.theme === Theme.Light) ? Theme.Dark : Theme.Light\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Icon, Icons } from './Icon';\r\nimport { Button } from './Button';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport { Themes } from 'common/interfaces';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toggleTheme } from 'store/app/actions';\r\nimport StorageSaver from 'utils/StorageSaver';\r\nimport { THEME_KEY } from 'store/app/reducers';\r\nimport { TRootState } from 'common/interfaces';\r\n\r\nimport './Timer/Timer.css';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\ninterface ITimeObject {\r\n    seconds: number;\r\n    minutes: number;\r\n    hours: number;\r\n}\r\n\r\nconst STANDARD_INTERVAL = 1000;\r\nconst HOURS_LIMIT = 100;\r\nconst MINUTES_LIMIT = 60;\r\nconst SECONDS_LIMIT = 60;\r\nconst PROGRESS_BAR_TEXT_SIZE = '15px';\r\nconst PROGRESS_BAR_STROKE_COLOR = 'RGB(5, 105, 203)';\r\nconst PROGRESS_BAR_STROKE_WIDTH = 7.5;\r\nconst TIME_OBJECT: ITimeObject = {\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0\r\n}\r\n\r\nenum TimerState {\r\n    isStoped,\r\n    isRunning,\r\n    isPaused\r\n}\r\n\r\nlet timer: NodeJS.Timeout;\r\n\r\nexport const Timer: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { theme } = useSelector((state: TRootState) => state.app);\r\n    const [timerState, setTimerState] = useState(TimerState.isStoped);\r\n    const [parsedTime, setParsedTime] = useState(\"\");\r\n    const [time, setTime] = useState(TIME_OBJECT);\r\n    const [isThemeChanging, setIsThemeChanging] = useState(false);\r\n\r\n    const getTick = useCallback(() => {\r\n        setTime((time: ITimeObject) => {\r\n            let { hours, minutes, seconds } = time;\r\n\r\n            seconds++;\r\n\r\n            if (seconds > SECONDS_LIMIT - 1) {\r\n                seconds = 0;\r\n                minutes++;\r\n            }\r\n\r\n            if (minutes > MINUTES_LIMIT - 1) {\r\n                minutes = 0;\r\n                hours++;\r\n            }\r\n\r\n            if (hours > HOURS_LIMIT) {\r\n                stopTimer();\r\n            }\r\n\r\n            return {\r\n                hours,\r\n                minutes,\r\n                seconds\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const getParsedTime = ({ hours, minutes, seconds }: ITimeObject) => {\r\n        const parsedHours = (hours < 10) ? `0${hours}` : `${hours}`;\r\n        const parsedMinutes = (minutes < 10) ? `0${minutes}` : `${minutes}`;\r\n        const parsedSeconds = (seconds < 10) ? `0${seconds}` : `${seconds}`;\r\n\r\n        return `${parsedHours}:${parsedMinutes}:${parsedSeconds}`;\r\n    }\r\n\r\n    const runTimer = useCallback(() => {\r\n        setTimerState(TimerState.isRunning);\r\n        timer = setInterval(getTick, STANDARD_INTERVAL);\r\n    }, [getTick]);\r\n\r\n    const pauseTimer = useCallback(() => {\r\n        setTimerState(TimerState.isPaused);\r\n        clearInterval(timer);\r\n    }, []);\r\n\r\n    const stopTimer = () => {\r\n        setTimerState(TimerState.isStoped);\r\n        setTime(TIME_OBJECT);\r\n        clearInterval(timer);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setParsedTime(getParsedTime(time));\r\n    }, [time]);\r\n\r\n    useEffect(() => {\r\n        StorageSaver.save(THEME_KEY, theme);\r\n    }, [theme]);\r\n\r\n    const timerClass = `timer${(isThemeChanging) ? ' is_theme_changing' : ''}`;\r\n    const timeClass = `timer__time ${(timerState === TimerState.isPaused) ? 'timer__time_paused' : ''}`;\r\n    const themeIcon = (theme === Themes.Light) ? Icons.Moon : Icons.Sun;\r\n\r\n    const playStopAction = (timerState !== TimerState.isRunning) ? runTimer : stopTimer;\r\n    const toggleThemeAction = () => {\r\n        setIsThemeChanging(true);\r\n        dispatch(toggleTheme());\r\n        setTimeout(() => setIsThemeChanging(false), 300)\r\n    };\r\n\r\n    return (\r\n        <section className={timerClass}>\r\n            <h1 className=\"timer__header\">sceuo-timer</h1>\r\n            <div className={timeClass}>\r\n                <CircularProgressbar\r\n                    value={time.seconds}\r\n                    text={parsedTime}\r\n                    minValue={0}\r\n                    maxValue={SECONDS_LIMIT}\r\n                    strokeWidth={PROGRESS_BAR_STROKE_WIDTH}\r\n                    styles={buildStyles({\r\n                        trailColor: 'transparent',\r\n                        pathColor: PROGRESS_BAR_STROKE_COLOR,\r\n                        textSize: PROGRESS_BAR_TEXT_SIZE,\r\n                        textColor: 'inherit'\r\n                    })}\r\n                />\r\n            </div>\r\n            <div className=\"timer__controller\">\r\n                <Button onClick={playStopAction}>\r\n                    {timerState !== TimerState.isRunning ? <Icon type={Icons.Start} /> : <Icon type={Icons.Stop} />}\r\n                </Button>\r\n                <Button\r\n                    onClick={pauseTimer}\r\n                    disabled={timerState !== TimerState.isRunning}\r\n                >\r\n                    <Icon type={Icons.Pause} />\r\n                </Button>\r\n                <Button\r\n                    onClick={toggleThemeAction}\r\n                    disabled={isThemeChanging}\r\n                >\r\n                    <Icon type={themeIcon} />\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport { Timer } from 'components/Timer';\r\nimport { useSelector } from 'react-redux';\r\nimport { TRootState } from 'common/interfaces';\r\n\r\nimport './App.css';\r\n\r\nexport const App: React.FC = () => {\r\n\tconst { theme } = useSelector((state: TRootState) => state.app);\r\n\r\n\treturn (\r\n\t\t<main className=\"App\" data-theme={theme}>\r\n\t\t\t<Timer />\r\n\t\t</main>\r\n\t)\r\n}","import { combineReducers } from \"redux\";\r\nimport { appReducer } from \"store/app/reducers\";\r\n\r\nexport default combineReducers({\r\n    app: appReducer\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './store/reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\nimport './themes.css';\r\n\r\nconst store = createStore(\r\n  rootReducer\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}