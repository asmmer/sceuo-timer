{"version":3,"sources":["components/Icon/Icon.tsx","components/constants/interfaces.ts","store/app/actions.ts","components/Button/Button.tsx","helpers/storage-saver.ts","store/app/reducers.ts","components/Timer/Timer.tsx","App.tsx","store/reducers.ts","serviceWorker.ts","index.tsx"],"names":["Icons","Themes","APP_ACTIONS","Icon","React","memo","type","theme","useSelector","state","app","className","Start","x","y","viewBox","d","Pause","Stop","version","Sun","Moon","Button","onClick","text","disabled","children","StorageSaver","save","key","value","localStorage","setItem","JSON","stringify","load","loadingData","getItem","parse","clear","TimerState","timer","initialState","currentTheme","Light","getCurrentTheme","TIME_OBJECT","hours","minutes","seconds","Timer","dispatch","useDispatch","useState","isStoped","timerState","setTimerState","parsedTime","setParsedTime","time","setTime","isThemeChanging","setIsThemeChanging","stopTimer","clearInterval","getTick","SECONDS_LIMIT","MINUTES_LIMIT","useEffect","parsedHours","parsedMinutes","parsedSeconds","getParsedTime","timerClass","timeClass","isPaused","themeIcon","playStopAction","isRunning","setInterval","minValue","maxValue","strokeWidth","styles","buildStyles","trailColor","pathColor","textSize","textColor","TOGGLE_THEME","setTimeout","App","combineReducers","action","Dark","Boolean","window","location","hostname","match","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.747c6210.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './Icon.sass';\r\n\r\nexport enum Icons {\r\n    Start,\r\n    Pause,\r\n    Stop,\r\n    Sun,\r\n    Moon\r\n}\r\n\r\ninterface IIcon {\r\n    type: Icons\r\n}\r\n\r\nexport const Icon: React.FC<IIcon> = React.memo(({ type }: IIcon) => {\r\n\tconst { theme } = useSelector((state: any) => state.app);\r\n\r\n    return <span className={`icon icon_${theme}`}>\r\n        {\r\n            type === Icons.Start && <>\r\n                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 494.148 494.148\">\r\n                    <g>\r\n                        <path d=\"M405.284,201.188L130.804,13.28C118.128,4.596,105.356,0,94.74,0C74.216,0,61.52,16.472,61.52,44.044v406.124\r\n                            c0,27.54,12.68,43.98,33.156,43.98c10.632,0,23.2-4.6,35.904-13.308l274.608-187.904c17.66-12.104,27.44-28.392,27.44-45.884\r\n                            C432.632,229.572,422.964,213.288,405.284,201.188z\"/>\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n        {\r\n            type === Icons.Pause && <>\r\n                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n                    <g>\r\n                        <path d=\"M181.333,0H74.667c-17.643,0-32,14.357-32,32v448c0,17.643,14.357,32,32,32h106.667c17.643,0,32-14.357,32-32V32\r\n                            C213.333,14.357,198.976,0,181.333,0z\"/>\r\n                    </g>\r\n                    <g>\r\n                        <path d=\"M437.333,0H330.667c-17.643,0-32,14.357-32,32v448c0,17.643,14.357,32,32,32h106.667c17.643,0,32-14.357,32-32V32\r\n                            C469.333,14.357,454.976,0,437.333,0z\"/>\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n        {\r\n            type === Icons.Stop && <>\r\n                <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 493.56 493.56\">\r\n                    <g>\r\n                        <path d=\"M438.254,0H58.974C27.502,0,0.006,25.992,0.006,57.472v379.256c0,31.48,27.496,56.832,58.968,56.832h379.28\r\n                            c31.468,0,55.3-25.352,55.3-56.832V57.472C493.554,25.992,469.722,0,438.254,0z\"/>\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n        {\r\n            type === Icons.Sun && <>\r\n                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 302.4 302.4\">\r\n                    <g>\r\n                        <path d=\"M204.8,97.6C191.2,84,172,75.2,151.2,75.2s-40,8.4-53.6,22.4c-13.6,13.6-22.4,32.8-22.4,53.6s8.8,40,22.4,53.6\r\n                            c13.6,13.6,32.8,22.4,53.6,22.4s40-8.4,53.6-22.4c13.6-13.6,22.4-32.8,22.4-53.6S218.8,111.2,204.8,97.6z\"/>\r\n                        <path d=\"M151.2,51.6c5.6,0,10.4-4.8,10.4-10.4V10.4c0-5.6-4.8-10.4-10.4-10.4c-5.6,0-10.4,4.8-10.4,10.4v30.8\r\n                            C140.8,46.8,145.6,51.6,151.2,51.6z\"/>\r\n                        <path d=\"M236.4,80.8l22-22c4-4,4-10.4,0-14.4s-10.4-4-14.4,0l-22,22c-4,4-4,10.4,0,14.4C225.6,84.8,232,84.8,236.4,80.8z\"/>\r\n                        <path d=\"M292,140.8h-30.8c-5.6,0-10.4,4.8-10.4,10.4c0,5.6,4.8,10.4,10.4,10.4H292c5.6,0,10.4-4.8,10.4-10.4\r\n                            C302.4,145.6,297.6,140.8,292,140.8z\"/>\r\n                        <path d=\"M236,221.6c-4-4-10.4-4-14.4,0s-4,10.4,0,14.4l22,22c4,4,10.4,4,14.4,0s4-10.4,0-14.4L236,221.6z\"/>\r\n                        <path d=\"M151.2,250.8c-5.6,0-10.4,4.8-10.4,10.4V292c0,5.6,4.8,10.4,10.4,10.4c5.6,0,10.4-4.8,10.4-10.4v-30.8\r\n                            C161.6,255.6,156.8,250.8,151.2,250.8z\"/>\r\n                        <path d=\"M66,221.6l-22,22c-4,4-4,10.4,0,14.4s10.4,4,14.4,0l22-22c4-4,4-10.4,0-14.4C76.8,217.6,70.4,217.6,66,221.6z\"/>\r\n                        <path d=\"M51.6,151.2c0-5.6-4.8-10.4-10.4-10.4H10.4c-5.6,0-10.4,4.8-10.4,10.4s4.8,10.4,10.4,10.4h30.8\r\n                            C46.8,161.6,51.6,156.8,51.6,151.2z\"/>\r\n                        <path d=\"M66,80.8c4,4,10.4,4,14.4,0s4-10.4,0-14.4l-22-22c-4-4-10.4-4-14.4,0s-4,10.4,0,14.4L66,80.8z\"/>\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n        {\r\n            type === Icons.Moon && <>\r\n                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 480 480\">\r\n                    <g>\r\n                        <path d=\"M459.782,347.328c-4.288-5.28-11.488-7.232-17.824-4.96c-17.76,6.368-37.024,9.632-57.312,9.632\r\n                            c-97.056,0-176-78.976-176-176c0-58.4,28.832-112.768,77.12-145.472c5.472-3.712,8.096-10.4,6.624-16.832\r\n                            S285.638,2.4,279.078,1.44C271.59,0.352,264.134,0,256.646,0c-132.352,0-240,107.648-240,240s107.648,240,240,240\r\n                            c84,0,160.416-42.688,204.352-114.176C464.55,360.032,464.038,352.64,459.782,347.328z\"/>\r\n                    </g>\r\n                </svg>\r\n            </>\r\n        }\r\n    </span>\r\n});\r\n","/**\r\n * Themes for application.\r\n */\r\nexport enum Themes {\r\n    Light = 'light_theme',\r\n    Dark = 'dark_theme'\r\n}","export enum APP_ACTIONS {\r\n    TOGGLE_THEME\r\n}\r\n\r\nexport const toggleTheme = () => ({\r\n    type: APP_ACTIONS.TOGGLE_THEME\r\n})","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './Button.sass';\r\n\r\ninterface IButton {\r\n    onClick?: any;\r\n    text?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport const Button: React.FC<IButton> = React.memo(({ onClick, text, disabled, children }) => {\r\n\tconst { theme } = useSelector((state: any) => state.app);\r\n\r\n    return <>\r\n        <button \r\n            className={`base_button base_button_${theme}`}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n        >\r\n            {children || text}\r\n        </button>\r\n    </>\r\n})\r\n","export default class StorageSaver {\r\n    public static save = (key: string, value: object): void => {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    public static load = (key: string): object | null => {\r\n        const loadingData = localStorage.getItem(key);\r\n\r\n        if (loadingData) {\r\n            return JSON.parse(loadingData);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static clear = (): void => {\r\n        localStorage.clear();\r\n    }\r\n}","import { APP_ACTIONS } from \"./actions\";\r\nimport { Themes } from \"../../components/constants/interfaces\";\r\nimport StorageSaver from \"../../helpers/storage-saver\";\r\n\r\ninterface IInitialState {\r\n    theme: Themes;\r\n}\r\n\r\nexport const THEME_KEY = \"theme\";\r\n\r\nconst getCurrentTheme = (): Themes => {\r\n    let currentTheme: any = StorageSaver.load(THEME_KEY);\r\n\r\n    if (currentTheme === null) {\r\n        currentTheme = Themes.Light;\r\n\r\n        StorageSaver.save(THEME_KEY, currentTheme);\r\n    }\r\n\r\n    return currentTheme;\r\n}\r\n\r\nconst initialState: IInitialState = {\r\n    theme: getCurrentTheme()\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case APP_ACTIONS.TOGGLE_THEME: {\r\n            return {\r\n                theme: (state.theme === Themes.Light) ? Themes.Dark : Themes.Light\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Icon, Icons } from '../Icon/Icon';\r\nimport { Button } from '../Button/Button';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport { Themes } from '../constants/interfaces';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toggleTheme } from '../../store/app/actions';\r\nimport StorageSaver from '../../helpers/storage-saver';\r\nimport { THEME_KEY } from '../../store/app/reducers';\r\n\r\nimport './Timer.sass';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\ninterface ITimeObject {\r\n    seconds: number;\r\n    minutes: number;\r\n    hours: number;\r\n}\r\n\r\nconst \r\n    STANDARD_INTERVAL = 1000,\r\n    HOURS_LIMIT = 100,\r\n    MINUTES_LIMIT = 60,\r\n    SECONDS_LIMIT = 60,\r\n    PROGRESS_BAR_TEXT_SIZE = \"15px\",\r\n    PROGRESS_BAR_STROKE_COLOR = 'RGB(5, 105, 203)',\r\n    PROGRESS_BAR_STROKE_WIDTH = 7.5,\r\n    TIME_OBJECT: ITimeObject = {\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0\r\n    }\r\n\r\nenum TimerState {\r\n    isStoped,\r\n    isRunning,\r\n    isPaused\r\n}\r\n\r\nlet timer: NodeJS.Timeout;\r\n\r\nexport const Timer: React.FC = () => {\r\n    const \r\n        dispatch = useDispatch(),\r\n        { theme } = useSelector((state: any) => state.app);\r\n\r\n    const \r\n        [timerState, setTimerState] = useState(TimerState.isStoped),\r\n        [parsedTime, setParsedTime] = useState(\"\"),\r\n        [time, setTime] = useState(TIME_OBJECT),\r\n        [isThemeChanging, setIsThemeChanging] = useState(false);\r\n\r\n    const runTimer = (): void => {\r\n        setTimerState(TimerState.isRunning);\r\n        timer = setInterval(getTick, STANDARD_INTERVAL);\r\n    }\r\n\r\n    const pauseTimer = (): void => {\r\n        setTimerState(TimerState.isPaused);\r\n        clearInterval(timer);\r\n    }\r\n\r\n    const stopTimer = (): void => {\r\n        setTimerState(TimerState.isStoped);\r\n        setTime(TIME_OBJECT);\r\n        clearInterval(timer);\r\n    }\r\n\r\n    const getTick = (): void => {\r\n        setTime((time: ITimeObject) => {\r\n            let { hours, minutes, seconds }: ITimeObject = time;\r\n     \r\n            seconds++;\r\n\r\n            if (seconds > SECONDS_LIMIT - 1) {\r\n                seconds = 0;\r\n                minutes++;\r\n            }\r\n\r\n            if (minutes > MINUTES_LIMIT - 1) {\r\n                minutes = 0;\r\n                hours++;\r\n            }\r\n\r\n            if (hours > HOURS_LIMIT) {\r\n                stopTimer();\r\n            }\r\n\r\n            return {\r\n                hours,\r\n                minutes,\r\n                seconds\r\n            }\r\n        })\r\n    }\r\n\r\n    const getParsedTime = ({ hours, minutes, seconds }: ITimeObject): string => {\r\n        const \r\n            parsedHours = (hours < 10) ? `0${hours}` : `${hours}`,\r\n            parsedMinutes = (minutes < 10) ? `0${minutes}` : `${minutes}`,\r\n            parsedSeconds = (seconds < 10) ? `0${seconds}` : `${seconds}`\r\n\r\n        return `${parsedHours}:${parsedMinutes}:${parsedSeconds}`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setParsedTime(getParsedTime(time));\r\n    }, [time]);\r\n\r\n    useEffect(() => {\r\n        StorageSaver.save(THEME_KEY, theme);\r\n    }, [theme]);\r\n\r\n    const\r\n        timerClass = `timer${(isThemeChanging) ? ' is_theme_changing' : ''}`,\r\n        timeClass = `timer__time timer__time_${theme} ${(timerState === TimerState.isPaused) ? 'timer__time_paused' : ''}`,\r\n        themeIcon = (theme === Themes.Light) ? Icons.Moon : Icons.Sun,\r\n        playStopAction = (timerState !== TimerState.isRunning) ? runTimer : stopTimer,\r\n        toggleThemeAction = () => {\r\n            setIsThemeChanging(true);\r\n            dispatch(toggleTheme());\r\n            setTimeout(() => setIsThemeChanging(false), 300)\r\n        };\r\n\r\n    return <section className={timerClass}>\r\n        <h1 className=\"timer__header\">sceuo-timer</h1>\r\n        <div className={timeClass}>\r\n            <CircularProgressbar \r\n                value={time.seconds}\r\n                text={parsedTime}\r\n                minValue={0}\r\n                maxValue={SECONDS_LIMIT}\r\n                strokeWidth={PROGRESS_BAR_STROKE_WIDTH}\r\n                styles={buildStyles({\r\n                    trailColor: 'transparent',\r\n                    pathColor: PROGRESS_BAR_STROKE_COLOR,\r\n                    textSize: PROGRESS_BAR_TEXT_SIZE,\r\n                    textColor: 'inherit'\r\n                })}\r\n            />\r\n        </div>\r\n        <div className=\"timer__controller\">\r\n            <Button onClick={playStopAction}>\r\n                {timerState !== TimerState.isRunning ? <Icon type={Icons.Start}/> : <Icon type={Icons.Stop}/>}\r\n            </Button>\r\n            <Button \r\n                onClick={pauseTimer}\r\n                disabled={timerState !== TimerState.isRunning}\r\n            >\r\n                <Icon type={Icons.Pause}/>\r\n            </Button>\r\n            <Button \r\n                onClick={toggleThemeAction}\r\n                disabled={isThemeChanging}\r\n            >\r\n                <Icon type={themeIcon}/>\r\n            </Button>\r\n        </div>\r\n    </section>\r\n}","import React from 'react';\r\nimport { Timer } from './components/Timer/Timer';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './App.sass';\r\n\r\nexport const App: React.FC = () => {\r\n\tconst { theme } = useSelector((state: any) => state.app);\r\n\r\n\treturn <>\r\n\t\t<main className={`App App_${theme}`}>\r\n\t\t\t<Timer />\r\n\t\t</main>\r\n\t</>\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { appReducer } from \"./app/reducers\";\r\n// import { timerReducer } from \"./timer/reducers\";\r\n\r\nexport default combineReducers({\r\n    app: appReducer,\r\n    // timer: timerReducer\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './store/reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\n\r\nconst store = createStore(\r\n\trootReducer\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}